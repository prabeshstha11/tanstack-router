/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as SubscriptionImport } from './routes/subscription'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'
import { Route as BlogIndexImport } from './routes/blog/index'
import { Route as BlogPage2Import } from './routes/blog/page2'
import { Route as BlogPage1Import } from './routes/blog/page1'

// Create/Update Routes

const SubscriptionRoute = SubscriptionImport.update({
  id: '/subscription',
  path: '/subscription',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

const BlogIndexRoute = BlogIndexImport.update({
  id: '/blog/',
  path: '/blog/',
  getParentRoute: () => rootRoute,
} as any)

const BlogPage2Route = BlogPage2Import.update({
  id: '/blog/page2',
  path: '/blog/page2',
  getParentRoute: () => rootRoute,
} as any)

const BlogPage1Route = BlogPage1Import.update({
  id: '/blog/page1',
  path: '/blog/page1',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/subscription': {
      id: '/subscription'
      path: '/subscription'
      fullPath: '/subscription'
      preLoaderRoute: typeof SubscriptionImport
      parentRoute: typeof rootRoute
    }
    '/blog/page1': {
      id: '/blog/page1'
      path: '/blog/page1'
      fullPath: '/blog/page1'
      preLoaderRoute: typeof BlogPage1Import
      parentRoute: typeof rootRoute
    }
    '/blog/page2': {
      id: '/blog/page2'
      path: '/blog/page2'
      fullPath: '/blog/page2'
      preLoaderRoute: typeof BlogPage2Import
      parentRoute: typeof rootRoute
    }
    '/blog/': {
      id: '/blog/'
      path: '/blog'
      fullPath: '/blog'
      preLoaderRoute: typeof BlogIndexImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/subscription': typeof SubscriptionRoute
  '/blog/page1': typeof BlogPage1Route
  '/blog/page2': typeof BlogPage2Route
  '/blog': typeof BlogIndexRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/subscription': typeof SubscriptionRoute
  '/blog/page1': typeof BlogPage1Route
  '/blog/page2': typeof BlogPage2Route
  '/blog': typeof BlogIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/subscription': typeof SubscriptionRoute
  '/blog/page1': typeof BlogPage1Route
  '/blog/page2': typeof BlogPage2Route
  '/blog/': typeof BlogIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/subscription'
    | '/blog/page1'
    | '/blog/page2'
    | '/blog'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/subscription' | '/blog/page1' | '/blog/page2' | '/blog'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/subscription'
    | '/blog/page1'
    | '/blog/page2'
    | '/blog/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  SubscriptionRoute: typeof SubscriptionRoute
  BlogPage1Route: typeof BlogPage1Route
  BlogPage2Route: typeof BlogPage2Route
  BlogIndexRoute: typeof BlogIndexRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  SubscriptionRoute: SubscriptionRoute,
  BlogPage1Route: BlogPage1Route,
  BlogPage2Route: BlogPage2Route,
  BlogIndexRoute: BlogIndexRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/subscription",
        "/blog/page1",
        "/blog/page2",
        "/blog/"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/subscription": {
      "filePath": "subscription.tsx"
    },
    "/blog/page1": {
      "filePath": "blog/page1.tsx"
    },
    "/blog/page2": {
      "filePath": "blog/page2.tsx"
    },
    "/blog/": {
      "filePath": "blog/index.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
